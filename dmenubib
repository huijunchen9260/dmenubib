#!/bin/sh

BIB="$BIB"
BIB_PDF_PATH="$BIB_PDF_PATH"
BIB_NOTE_PATH="$BIB_PDF_PATH/Notes"
BIB_GENERIC_FONT=Monospace-15
BIB_NOTIF_FONT=Monospace-25
BIB_GENERIC_COLOR=#005577
BIB_SER="SER - Search BibTeX on Internet"
BIB_REF="REF - Get BibTeX label for reference"
BIB_OPN="OPN - Open corresponding pdf file based on BibTeX"
BIB_PDF="PDF - Manually Rename and encode metadata into pdf"
BIB_AUO="AUO - Automatically rename and encode metadata into pdf"
BIB_NTE="NTE - Write markdown notes on references"
BIBACTLIST="$(printf '%s\n' "$BIB_SER" "$BIB_REF" "$BIB_OPN" "$BIB_PDF" "$BIB_AUO" "$BIB_NTE")"
nl='
'
act="placeholder"
doi_regex='(https://doi.org/)?10\.[0-9]{4}[0-9.]*/[^[:space:]]*'

[ ! -d "$BIB_NOTE_PATH" ] && mkdir "$BIB_NOTE_PATH"

. dmenubib-menu
. dmenubib-search
. dmenubib-refer
. dmenubib-pdfmeta
. dmenubib-open

CheckDeps () {
    depcount=0
    for CurDep in "$@"; do
	if ! command -v "$CurDep" 1> /dev/null 2>&1; then
	    printf '%s\n' "ERROR: Dependency $CurDep not met."  1>&2
	    depcount=$((depcount+1))
	fi
    done
    unset CurDep
}

CheckDeps grep awk dmenu exiftool sed eval pdftotext printf tail curl echo

[ "$depcount" -gt 0 ] && exit 1

BIB_Action () {
    while [ -n "$act" ]; do
	act="$(printf '%s\n' "$BIBACTLIST" | yprompt "Actions: " "$BIB_GENERIC_COLOR")"
	case "$act" in
	    "$BIB_SER") BIB_SER ;;
	    "$BIB_REF") BIB_REF ;;
	    "$BIB_OPN") BIB_OPN ;;
	    "$BIB_PDF") BIB_PDF ;;
	    "$BIB_AUO") BIB_AUO ;;
	    "$BIB_NTE") BIB_NTE ;;
	esac
    done
}

BIB_SER () {
    CheckBIB
    criteria="$(printf '%s\n' "Text" "PDF" | yprompt "Searching criteria: " "$BIB_GENERIC_COLOR")"
    case "$criteria" in
	"Text")
	    input="$(xprompt "Type text to search: " "$BIB_GENERIC_COLOR")"
	    [ -n "$input" ] && CheckArg "$input"
	    ;;
	"PDF")
	    MainMenu
	    [ -n "$CHOICE" ] && CheckArg "$CHOICE"
	    ;;
    esac
    ScanBIB
}

BIB_REF () {
    CheckBIB
    SearchBIB
    RefBIB
}

BIB_OPN () {
    CheckBIB
    SearchBIB
    OpenBIB
}

BIB_NTE () {
    CheckBIB
    SearchBIB
    NoteBIB
}

BIB_PDF () {
    CheckBIB
    MainMenu
    if [ -n "$CHOICE" ]; then
	CheckArg "$CHOICE"
	SearchBIB
	MetaGen
	MetaPDFBind "$CHOICE"
    fi
}

BIB_AUO () {
    CheckBIB
    MetaAutoGen
    MetaFixGen
}

BIB_Action
